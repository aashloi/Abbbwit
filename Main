local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")

local OrionLib = {
	Elements = {},
	ThemeObjects = {},
	Connections = {},
	Flags = {},
	Themes = {
		Default = {
			Main = Color3.fromRGB(225, 240, 240),
			Second = Color3.fromRGB(255, 230, 240),
			Stroke = Color3.fromRGB(255, 200, 220),
			Divider = Color3.fromRGB(255, 200, 220),
			Text = Color3.fromRGB(100, 50, 70),
			TextDark = Color3.fromRGB(120, 70, 90)
		}
	},
	SelectedTheme = "Default",
	Folder = nil,
	SaveCfg = false
}

local Icons = {}
local Success, Response = pcall(function()
	Icons = HttpService:JSONDecode(game:HttpGetAsync("https://raw.githubusercontent.com/evoincorp/lucideblox/master/src/modules/util/icons.json")).icons
end)
if not Success then
	warn("\nOrion Library - Failed to load Feather Icons. Error code: " .. Response .. "\n")
end	
local function GetIcon(IconName)
	if Icons[IconName] ~= nil then
		return Icons[IconName]
	else
		return nil
	end
end   

local Orion = Instance.new("ScreenGui")
Orion.Name = "Orion"
if syn then
	syn.protect_gui(Orion)
	Orion.Parent = game.CoreGui
else
	Orion.Parent = gethui() or game.CoreGui
end
if gethui then
	for _, Interface in ipairs(gethui():GetChildren()) do
		if Interface.Name == Orion.Name and Interface ~= Orion then
			Interface:Destroy()
		end
	end
else
	for _, Interface in ipairs(game.CoreGui:GetChildren()) do
		if Interface.Name == Orion.Name and Interface ~= Orion then
			Interface:Destroy()
		end
	end
end

function OrionLib:IsRunning()
	if gethui then
		return Orion.Parent == gethui()
	else
		return Orion.Parent == game:GetService("CoreGui")
	end
end

local function AddConnection(Signal, Function)
	if (not OrionLib:IsRunning()) then
		return
	end
	local SignalConnect = Signal:Connect(Function)
	table.insert(OrionLib.Connections, SignalConnect)
	return SignalConnect
end

task.spawn(function()
	while (OrionLib:IsRunning()) do
		wait()
	end
	for _, Connection in next, OrionLib.Connections do
		Connection:Disconnect()
	end
end)

local function AddDraggingFunctionality(DragPoint, Main)
	pcall(function()
		local Dragging, DragInput, MousePos, FramePos = false
		DragPoint.InputBegan:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				MousePos = Input.Position
				FramePos = Main.Position
				Input.Changed:Connect(function()
					if Input.UserInputState == Enum.UserInputState.End then
						Dragging = false
					end
				end)
			end
		end)
		DragPoint.InputChanged:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch then
				DragInput = Input
			end
		end)
		UserInputService.InputChanged:Connect(function(Input)
			if Input == DragInput and Dragging then
				local Delta = Input.Position - MousePos
				TweenService:Create(Main, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)}):Play()
			end
		end)
	end)
end   

local function Create(Name, Properties, Children)
	local Object = Instance.new(Name)
	for i, v in next, Properties or {} do
		Object[i] = v
	end
	for i, v in next, Children or {} do
		v.Parent = Object
	end
	return Object
end

local function CreateElement(ElementName, ElementFunction)
	OrionLib.Elements[ElementName] = function(...)
		return ElementFunction(...)
	end
end

local function MakeElement(ElementName, ...)
	local NewElement = OrionLib.Elements[ElementName](...)
	return NewElement
end

local function SetProps(Element, Props)
	table.foreach(Props, function(Property, Value)
		Element[Property] = Value
	end)
	return Element
end

local function SetChildren(Element, Children)
	table.foreach(Children, function(_, Child)
		Child.Parent = Element
	end)
	return Element
end

local function Round(Number, Factor)
	local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
	if Result < 0 then Result = Result + Factor end
	return Result
end

local function ReturnProperty(Object)
	if Object:IsA("Frame") or Object:IsA("TextButton") then
		return "BackgroundColor3"
	end 
	if Object:IsA("ScrollingFrame") then
		return "ScrollBarImageColor3"
	end 
	if Object:IsA("UIStroke") then
		return "Color"
	end 
	if Object:IsA("TextLabel") or Object:IsA("TextBox") then
		return "TextColor3"
	end   
	if Object:IsA("ImageLabel") or Object:IsA("ImageButton") then
		return "ImageColor3"
	end   
end

local function AddThemeObject(Object, Type)
	if not OrionLib.ThemeObjects[Type] then
		OrionLib.ThemeObjects[Type] = {}
	end    
	table.insert(OrionLib.ThemeObjects[Type], Object)
	Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Type]
	return Object
end    

local function SetTheme()
	for Name, Type in pairs(OrionLib.ThemeObjects) do
		for _, Object in pairs(Type) do
			Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Name]
		end    
	end    
end

local function PackColor(Color)
	return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
	return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadCfg(Config)
	local Data = HttpService:JSONDecode(Config)
	table.foreach(Data, function(a,b)
		if OrionLib.Flags[a] then
			spawn(function() 
				if OrionLib.Flags[a].Type == "Colorpicker" then
					OrionLib.Flags[a]:Set(UnpackColor(b))
				else
					OrionLib.Flags[a]:Set(b)
				end    
			end)
		else
			warn("Orion Library Config Loader - Could not find ", a ,b)
		end
	end)
end

local function SaveCfg(Name)
	local Data = {}
	for i,v in pairs(OrionLib.Flags) do
		if v.Save then
			if v.Type == "Colorpicker" then
				Data[i] = PackColor(v.Value)
			else
				Data[i] = v.Value
			end
		end	
	end
	writefile(OrionLib.Folder .. "/" .. Name .. ".txt", tostring(HttpService:JSONEncode(Data)))
end

local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3,Enum.UserInputType.Touch}
local BlacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Up,Enum.KeyCode.Left,Enum.KeyCode.Down,Enum.KeyCode.Right,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Backspace,Enum.KeyCode.Escape}

local function CheckKey(Table, Key)
	for _, v in next, Table do
		if v == Key then
			return true
		end
	end
end

CreateElement("Corner", function(Scale, Offset)
	local Corner = Create("UICorner", {
		CornerRadius = UDim.new(Scale or 0, Offset or 10)
	})
	return Corner
end)

CreateElement("Stroke", function(Color, Thickness)
	local Stroke = Create("UIStroke", {
		Color = Color or Color3.fromRGB(255, 255, 255),
		Thickness = Thickness or 1
	})
	return Stroke
end)

CreateElement("List", function(Scale, Offset)
	local List = Create("UIListLayout", {
		SortOrder = Enum.SortOrder.LayoutOrder,
		Padding = UDim.new(Scale or 0, Offset or 0)
	})
	return List
end)

CreateElement("Padding", function(Bottom, Left, Right, Top)
	local Padding = Create("UIPadding", {
		PaddingBottom = UDim.new(0, Bottom or 4),
		PaddingLeft = UDim.new(0, Left or 4),
		PaddingRight = UDim.new(0, Right or 4),
		PaddingTop = UDim.new(0, Top or 4)
	})
	return Padding
end)

CreateElement("TFrame", function()
	local TFrame = Create("Frame", {
		BackgroundTransparency = 1
	})
	return TFrame
end)

CreateElement("Frame", function(Color)
	local Frame = Create("Frame", {
		BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
		BorderSizePixel = 0
	})
	return Frame
end)

CreateElement("RoundFrame", function(Color, Scale, Offset)
	local Frame = Create("Frame", {
		BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
		BorderSizePixel = 0
	}, {
		Create("UICorner", {
			CornerRadius = UDim.new(Scale, Offset)
		})
	})
	return Frame
end)

CreateElement("Button", function()
	local Button = Create("TextButton", {
		Text = "",
		AutoButtonColor = false,
		BackgroundTransparency = 1,
		BorderSizePixel = 0
	})
	return Button
end)

CreateElement("ScrollFrame", function(Color, Width)
	local ScrollFrame = Create("ScrollingFrame", {
		BackgroundTransparency = 1,
		MidImage = "rbxassetid://7445543667",
		BottomImage = "rbxassetid://7445543667",
		TopImage = "rbxassetid://7445543667",
		ScrollBarImageColor3 = Color,
		BorderSizePixel = 0,
		ScrollBarThickness = Width,
		CanvasSize = UDim2.new(0, 0, 0, 0)
	})
	return ScrollFrame
end)

CreateElement("Image", function(ImageID)
	local ImageNew = Create("ImageLabel", {
		Image = ImageID,
		BackgroundTransparency = 1
	})
	if GetIcon(ImageID) ~= nil then
		ImageNew.Image = GetIcon(ImageID)
	end	
	return ImageNew
end)

CreateElement("ImageButton", function(ImageID)
	local Image = Create("ImageButton", {
		Image = ImageID,
		BackgroundTransparency = 1
	})
	return Image
end)

CreateElement("Label", function(Text, TextSize, Transparency)
	local Label = Create("TextLabel", {
		Text = Text or "",
		TextColor3 = Color3.fromRGB(240, 240, 240),
		TextTransparency = Transparency or 0,
		TextSize = TextSize or 15,
		Font = Enum.Font.Gotham,
		RichText = true,
		BackgroundTransparency = 1,
		TextXAlignment = Enum.TextXAlignment.Left
	})
	return Label
end)

local NotificationHolder = SetProps(SetChildren(MakeElement("TFrame"), {
	SetProps(MakeElement("List"), {
		HorizontalAlignment = Enum.HorizontalAlignment.Center,
		SortOrder = Enum.SortOrder.LayoutOrder,
		VerticalAlignment = Enum.VerticalAlignment.Bottom,
		Padding = UDim.new(0, 5)
	})
}), {
	Position = UDim2.new(1, -25, 1, -25),
	Size = UDim2.new(0, 300, 1, -25),
	AnchorPoint = Vector2.new(1, 1),
	Parent = Orion
})

function OrionLib:MakeNotification(NotificationConfig)
	spawn(function()
		NotificationConfig.Name = NotificationConfig.Name or "Notification"
		NotificationConfig.Content = NotificationConfig.Content or "Test"
		NotificationConfig.Image = NotificationConfig.Image or "rbxassetid://4384403532"
		NotificationConfig.Time = NotificationConfig.Time or 15

		local NotificationParent = SetProps(MakeElement("TFrame"), {
			Size = UDim2.new(1, 0, 0, 0),
			AutomaticSize = Enum.AutomaticSize.Y,
			Parent = NotificationHolder
		})

		local NotificationFrame = SetChildren(SetProps(MakeElement("RoundFrame", OrionLib.Themes.Default.Main, 0, 10), {
			Parent = NotificationParent, 
			Size = UDim2.new(1, 0, 0, 0),
			Position = UDim2.new(1, -55, 0, 0),
			BackgroundTransparency = 0,
			AutomaticSize = Enum.AutomaticSize.Y
		}), {
			MakeElement("Stroke", OrionLib.Themes.Default.Stroke, 1.2),
			MakeElement("Padding", 12, 12, 12, 12),
			SetProps(MakeElement("Image", NotificationConfig.Image), {
				Size = UDim2.new(0, 20, 0, 20),
				ImageColor3 = OrionLib.Themes.Default.Text,
				Name = "Icon"
			}),
			SetProps(MakeElement("Label", NotificationConfig.Name, 15), {
				Size = UDim2.new(1, -30, 0, 20),
				Position = UDim2.new(0, 30, 0, 0),
				Font = Enum.Font.GothamBold,
                TextColor3 = OrionLib.Themes.Default.Text,
				Name = "Title"
			}),
			SetProps(MakeElement("Label", NotificationConfig.Content, 14), {
				Size = UDim2.new(1, 0, 0, 0),
				Position = UDim2.new(0, 0, 0, 25),
				Font = Enum.Font.GothamSemibold,
				Name = "Content",
				AutomaticSize = Enum.AutomaticSize.Y,
				TextColor3 = OrionLib.Themes.Default.TextDark,
				TextWrapped = true
			})
		})

		TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 0, 0, 0)}):Play()
		wait(NotificationConfig.Time - 0.88)
		TweenService:Create(NotificationFrame.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()
		wait(0.3)
		TweenService:Create(NotificationFrame.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0.9}):Play()
		TweenService:Create(NotificationFrame.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
		TweenService:Create(NotificationFrame.Content, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
		wait(0.05)
		NotificationFrame:TweenPosition(UDim2.new(1, 20, 0, 0),'In','Quint',0.8,true)
		wait(1.35)
		NotificationFrame:Destroy()
	end)
end    

function OrionLib:Init()
	if OrionLib.SaveCfg then	
		pcall(function()
			if isfile(OrionLib.Folder .. "/" .. game.GameId .. ".txt") then
				LoadCfg(readfile(OrionLib.Folder .. "/" .. game.GameId .. ".txt"))
				OrionLib:MakeNotification({
					Name = "Configuration",
					Content = "Auto-loaded configuration for the game " .. game.GameId .. ".",
					Time = 5
				})
			end
		end)		
	end	
end	

function OrionLib:MakeWindow(WindowConfig)
	local FirstTab = true
	local Minimized = false
	local Loaded = false
	local UIHidden = false

	WindowConfig = WindowConfig or {}
	WindowConfig.Name = WindowConfig.Name or "Orion Library"
	WindowConfig.ConfigFolder = WindowConfig.ConfigFolder or WindowConfig.Name
	WindowConfig.SaveConfig = WindowConfig.SaveConfig or false
	WindowConfig.HidePremium = WindowConfig.HidePremium or false
	if WindowConfig.IntroEnabled == nil then
		WindowConfig.IntroEnabled = true
	end
	WindowConfig.IntroText = WindowConfig.IntroText or "Orion Library"
	WindowConfig.CloseCallback = WindowConfig.CloseCallback or function() end
	WindowConfig.ShowIcon = WindowConfig.ShowIcon or false
	WindowConfig.Icon = WindowConfig.Icon or "rbxassetid://8834748103"
	WindowConfig.IntroIcon = WindowConfig.IntroIcon or "rbxassetid://8834748103"
	OrionLib.Folder = WindowConfig.ConfigFolder
	OrionLib.SaveCfg = WindowConfig.SaveConfig

	if WindowConfig.SaveConfig then
		if not isfolder(WindowConfig.ConfigFolder) then
			makefolder(WindowConfig.ConfigFolder)
		end	
	end

	local TabHolder = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 4), {
		Size = UDim2.new(1, 0, 1, -50)
	}), {
		MakeElement("List"),
		MakeElement("Padding", 8, 0, 0, 8)
	}), "Divider")

	AddConnection(TabHolder.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
		TabHolder.CanvasSize = UDim2.new(0, 0, 0, TabHolder.UIListLayout.AbsoluteContentSize.Y + 16)
	end)

	local CloseBtn = SetChildren(SetProps(MakeElement("Button"), {
		Size = UDim2.new(0.5, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0, 0),
		BackgroundTransparency = 1
	}), {
		AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072725342"), {
			Position = UDim2.new(0, 9, 0, 6),
			Size = UDim2.new(0, 18, 0, 18)
		}), "Text")
	})

	local MinimizeBtn = SetChildren(SetProps(MakeElement("Button"), {
		Size = UDim2.new(0.5, 0, 1, 0),
		BackgroundTransparency = 1
	}), {
		AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072719338"), {
			Position = UDim2.new(0, 9, 0, 6),
			Size = UDim2.new(0, 18, 0, 18),
			Name = "Ico"
		}), "Text")
	})

	local DragPoint = SetProps(MakeElement("TFrame"), {
		Size = UDim2.new(1, 0, 0, 50)
	})

	local WindowStuff = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
		Size = UDim2.new(0, 150, 1, -50),
		Position = UDim2.new(0, 0, 0, 50)
	}), {
		AddThemeObject(SetProps(MakeElement("Frame"), {
			Size = UDim2.new(1, 0, 0, 10),
			Position = UDim2.new(0, 0, 0, 0)
		}), "Second"), 
		AddThemeObject(SetProps(MakeElement("Frame"), {
			Size = UDim2.new(0, 10, 1, 0),
			Position = UDim2.new(1, -10, 0, 0)
		}), "Second"), 
		AddThemeObject(SetProps(MakeElement("Frame"), {
			Size = UDim2.new(0, 1, 1, 0),
			Position = UDim2.new(1, -1, 0, 0)
		}), "Stroke"), 
		TabHolder,
		SetChildren(SetProps(MakeElement("TFrame"), {
			Size = UDim2.new(1, 0, 0, 50),
			Position = UDim2.new(0, 0, 1, -50)
		}), {
			AddThemeObject(SetProps(MakeElement("Frame"), {
				Size = UDim2.new(1, 0, 0, 1)
			}), "Stroke"), 
			AddThemeObject(SetChildren(SetProps(MakeElement("Frame"), {
				AnchorPoint = Vector2.new(0, 0.5),
				Size = UDim2.new(0, 32, 0, 32),
				Position = UDim2.new(0, 10, 0.5, 0)
			}), {
				SetProps(MakeElement("Image", "https://www.roblox.com/headshot-thumbnail/image?userId=".. LocalPlayer.UserId .."&width=420&height=420&format=png"), {
					Size = UDim2.new(1, 0, 1, 0)
				}),
				AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://4031889928"), {
					Size = UDim2.new(1, 0, 1, 0),
				}), "Second"),
				MakeElement("Corner", 1)
			}), "Divider"),
			SetChildren(SetProps(MakeElement("TFrame"), {
				AnchorPoint = Vector2.new(0, 0.5),
				Size = UDim2.new(0, 32, 0, 32),
				Position = UDim2.new(0, 10, 0.5, 0)
			}), {
				AddThemeObject(MakeElement("Stroke"), "Stroke"),
				MakeElement("Corner", 1)
			}),
			AddThemeObject(SetProps(MakeElement("Label", LocalPlayer.DisplayName, WindowConfig.HidePremium and 14 or 13), {
				Size = UDim2.new(1, -60, 0, 13),
				Position = WindowConfig.HidePremium and UDim2.new(0, 50, 0, 19) or UDim2.new(0, 50, 0, 12),
				Font = Enum.Font.GothamBold,
				ClipsDescendants = true
			}), "Text"),
			AddThemeObject(SetProps(MakeElement("Label", "", 12), {
				Size = UDim2.new(1, -60, 0, 12),
				Position = UDim2.new(0, 50, 1, -25),
				Visible = not WindowConfig.HidePremium
			}), "TextDark")
		}),
	}), "Second")

	local WindowName = AddThemeObject(SetProps(MakeElement("Label", WindowConfig.Name, 14), {
		Size = UDim2.new(1, -30, 2, 0),
		Position = UDim2.new(0, 25, 0, -24),
		Font = Enum.Font.GothamBlack,
		TextSize = 20
	}), "Text")

	local WindowTopBarLine = AddThemeObject(SetProps(MakeElement("Frame"), {
		Size = UDim2.new(1, 0, 0, 1),
		Position = UDim2.new(0, 0, 1, -1)
	}), "Stroke")

	local MainWindow = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
		Parent = Orion,
		Position = UDim2.new(0.5, -275, 0.5, -155),
		Size = UDim2.new(0, 550, 0, 310),
		ClipsDescendants = true
	}), {
		SetChildren(SetProps(MakeElement("TFrame"), {
			Size = UDim2.new(1, 0, 0, 50),
			Name = "TopBar"
		}), {
			WindowName,
			WindowTopBarLine,
			AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 7), {
				Size = UDim2.new(0, 70, 0, 30),
				Position = UDim2.new(1, -90, 0, 10)
			}), {
				AddThemeObject(MakeElement("Stroke"), "Stroke"),
				AddThemeObject(SetProps(MakeElement("Frame"), {
					Size = UDim2.new(0, 1, 1, 0),
					Position = UDim2.new(0.5, 0, 0, 0)
				}), "Stroke"), 
				CloseBtn,
				MinimizeBtn
			}), "Second"), 
		}),
		DragPoint,
		WindowStuff
	}), "Main")

	if WindowConfig.ShowIcon then
		WindowName.Position = UDim2.new(0, 50, 0, -24)
		local WindowIcon = SetProps(MakeElement("Image", WindowConfig.Icor), {
			Size = UDim2.new(0, 20, 0, 20),
			Position = UDim2.new(0, 25, 0, 15)
		})
		WindowIcon.Parent = MainWindow.TopBar
	end	

	AddDraggingFunctionality(DragPoint, MainWindow)

	AddConnection(CloseBtn.MouseButton1Up, function()
		MainWindow.Visible = false
		UIHidden = true
		OrionLib:MakeNotification({
			Name = "Interface Hidden",
			Content = "Tap RightShift to reopen the interface",
			Time = 5
		})
		WindowConfig.CloseCallback()
	end)

	AddConnection(UserInputService.InputBegan, function(Input)
		if Input.KeyCode == Enum.KeyCode.RightShift and UIHidden then
			MainWindow.Visible = true
		end
	end)

	AddConnection(MinimizeBtn.MouseButton1Up, function()
		if Minimized then
			TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 550, 0, 310)}):Play()
			MinimizeBtn.Ico.Image = "rbxassetid://7072719338"
			wait(.02)
			MainWindow.ClipsDescendants = false
			WindowStuff.Visible = true
			WindowTopBarLine.Visible = true
		else
			MainWindow.ClipsDescendants = true
			WindowTopBarLine.Visible = false
			MinimizeBtn.Ico.Image = "rbxassetid://7072720870"
			TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, WindowName.TextBounds.X + 140, 0, 50)}):Play()
			wait(0.1)
			WindowStuff.Visible = false	
		end
		Minimized = not Minimized    
	end)

	local function LoadSequence()
		MainWindow.Visible = false
		local LoadSequenceLogo = SetProps(MakeElement("Image", WindowConfig.IntroIcon), {
			Parent = Orion,
			AnchorPoint = Vector2.new(0.5, 0.5),
			Position = UDim2.new(0.5, 0, 0.4, 0),
			Size = UDim2.new(0, 28, 0, 28),
			ImageColor3 = Color3.fromRGB(255, 255, 255),
			ImageTransparency = 1
		})

		local LoadSequenceText = SetProps(MakeElement("Label", WindowConfig.IntroText, 14), {
			Parent = Orion,
			Size = UDim2.new(1, 0, 1, 0),
			AnchorPoint = Vector2.new(0.5, 0.5),
			Position = UDim2.new(0.5, 19, 0.5, 0),
			TextXAlignment = Enum.TextXAlignment.Center,
			Font = Enum.Font.GothamBold,
			TextTransparency = 1
		})

		TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageTransparency = 0, Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
		wait(0.8)
		TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -(LoadSequenceText.TextBounds.X/2), 0.5, 0)}):Play()
		wait(0.3)
		TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
		wait(2)
		TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
		MainWindow.Visible = true
		LoadSequenceLogo:Destroy()
		LoadSequenceText:Destroy()
	end 

	if WindowConfig.IntroEnabled then
		LoadSequence()
	end	

	local TabFunction = {}
	function TabFunction:MakeTab(TabConfig)
		TabConfig = TabConfig or {}
		TabConfig.Name = TabConfig.Name or "Tab"
		TabConfig.Icon = TabConfig.Icon or ""
		TabConfig.PremiumOnly = TabConfig.PremiumOnly or false

		local TabFrame = SetChildren(SetProps(MakeElement("Button"), {
			Size = UDim2.new(1, 0, 0, 30),
			Parent = TabHolder
		}), {
			AddThemeObject(SetProps(MakeElement("Image", TabConfig.Icon), {
				AnchorPoint = Vector2.new(0, 0.5),
				Size = UDim2.new(0, 18, 0, 18),
				Position = UDim2.new(0, 10, 0.5, 0),
				ImageTransparency = 0.4,
				Name = "Ico"
			}), "Text"),
			AddThemeObject(SetProps(MakeElement("Label", TabConfig.Name, 14), {
				Size = UDim2.new(1, -35, 1, 0),
				Position = UDim2.new(0, 35, 0, 0),
				Font = Enum.Font.GothamSemibold,
				TextTransparency = 0.4,
				Name = "Title"
			}), "Text")
		})

		if GetIcon(TabConfig.Icon) ~= nil then
			TabFrame.Ico.Image = GetIcon(TabConfig.Icon)
		end	

		local Container = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 5), {
			Size = UDim2.new(1, -150, 1, -50),
			Position = UDim2.new(0, 150, 0, 50),
			Parent = MainWindow,
			Visible = false,
			Name = "ItemContainer"
		}), {
			MakeElement("List", 0, 6),
			MakeElement("Padding", 15, 10, 10, 15)
		}), "Divider")

		AddConnection(Container.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
			Container.CanvasSize = UDim2.new(0, 0, 0, Container.UIListLayout.AbsoluteContentSize.Y + 30)
		end)

		if FirstTab then
			FirstTab = false
			TabFrame.Ico.ImageTransparency = 0
			TabFrame.Title.TextTransparency = 0
			TabFrame.Title.Font = Enum.Font.GothamBlack
			Container.Visible = true
		end    

		AddConnection(TabFrame.MouseButton1Click, function()
			for _, Tab in next, TabHolder:GetChildren() do
				if Tab:IsA("TextButton") then
					Tab.Title.Font = Enum.Font.GothamSemibold
					TweenService:Create(Tab.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0.4}):Play()
					TweenService:Create(Tab.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
				end    
			end
			for _, ItemContainer in next, MainWindow:GetChildren() do
				if ItemContainer.Name == "ItemContainer" then
					ItemContainer.Visible = false
				end    
			end  
			TweenService:Create(TabFrame.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
			TweenService:Create(TabFrame.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
			TabFrame.Title.Font = Enum.Font.GothamBlack
			Container.Visible = true   
		end)

		local function GetElements(ItemParent)
			local ElementFunction = {}
			function ElementFunction:AddLabel(Text)
				local LabelFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					AddThemeObject(SetProps(MakeElement("Label", Text, 14), {
						Size = UDim2.new(1, -20, 1, 0),
						Position = UDim2.new(0, 10, 0, 0),
						TextXAlignment = Enum.TextXAlignment.Center,
						Font = Enum.Font.GothamSemibold
					}), "Text")
				})
				return LabelFrame
			end

			function ElementFunction:AddButton(ButtonConfig)
				ButtonConfig = ButtonConfig or {}
				ButtonConfig.Name = ButtonConfig.Name or "Button"
				ButtonConfig.Callback = ButtonConfig.Callback or function() end

				local ButtonFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					AddThemeObject(SetProps(MakeElement("Label", ButtonConfig.Name, 14), {
						Size = UDim2.new(1, -20, 1, 0),
						Position = UDim2.new(0, 10, 0, 0),
						TextXAlignment = Enum.TextXAlignment.Center,
						Font = Enum.Font.GothamSemibold
					}), "Text")
				})

				local ButtonBtn = SetProps(MakeElement("Button"), {
					Size = UDim2.new(1, 0, 1, 0),
					Parent = ButtonFrame
				})

				AddConnection(ButtonBtn.MouseButton1Up, function()
					ButtonConfig.Callback()
					TweenService:Create(ButtonFrame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 0.4}):Play()
					wait(0.15)
					TweenService:Create(ButtonFrame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 0.7}):Play()
				end)

				return ButtonFrame
			end

			function ElementFunction:AddToggle(ToggleConfig)
				ToggleConfig = ToggleConfig or {}
				ToggleConfig.Name = ToggleConfig.Name or "Toggle"
				ToggleConfig.Default = ToggleConfig.Default or false
				ToggleConfig.Callback = ToggleConfig.Callback or function() end
				ToggleConfig.Flag = ToggleConfig.Flag or ToggleConfig.Name
				ToggleConfig.Save = ToggleConfig.Save or false

				local Toggled = ToggleConfig.Default
				local ToggleDebounce = false

				local ToggleFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					AddThemeObject(SetProps(MakeElement("Label", ToggleConfig.Name, 14), {
						Size = UDim2.new(1, -20, 1, 0),
						Position = UDim2.new(0, 10, 0, 0),
						Font = Enum.Font.GothamSemibold
					}), "Text"),
					AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 7), {
						Size = UDim2.new(0, 30, 0, 15),
						Position = UDim2.new(1, -35, 0.5, 0),
						AnchorPoint = Vector2.new(1, 0.5),
						BackgroundTransparency = 0.8
					}), {
						AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke")
					}), "Second"),
					SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 7), {
						Size = UDim2.new(0, 11, 0, 11),
						Position = UDim2.new(0, 2, 0.5, 0),
						AnchorPoint = Vector2.new(0, 0.5),
						BackgroundTransparency = 0
					}), {
						AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke")
					})
				})

				local ToggleBtn = SetProps(MakeElement("Button"), {
					Size = UDim2.new(1, 0, 1, 0),
					Parent = ToggleFrame
				})

				local function Toggle()
					if ToggleDebounce then
						return
					end
					ToggleDebounce = true
					Toggled = not Toggled
					if Toggled then
						TweenService:Create(ToggleFrame.Frame.Frame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(0, 17, 0.5, 0)}):Play()
						TweenService:Create(ToggleFrame.Frame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
					else
						TweenService:Create(ToggleFrame.Frame.Frame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(0, 2, 0.5, 0)}):Play()
						TweenService:Create(ToggleFrame.Frame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 0.8}):Play()
					end
					ToggleConfig.Callback(Toggled)
					wait(0.15)
					ToggleDebounce = false
				end

				AddConnection(ToggleBtn.MouseButton1Up, Toggle)

				if ToggleConfig.Default then
					Toggle()
				end

				OrionLib.Flags[ToggleConfig.Flag] = {
					Type = "Toggle",
					Save = ToggleConfig.Save,
					Value = Toggled,
					Set = function(Value)
						if Toggled ~= Value then
							Toggle()
						end
					end
				}

				return ToggleFrame
			end

			function ElementFunction:AddSlider(SliderConfig)
				SliderConfig = SliderConfig or {}
				SliderConfig.Name = SliderConfig.Name or "Slider"
				SliderConfig.Min = SliderConfig.Min or 0
				SliderConfig.Max = SliderConfig.Max or 100
				SliderConfig.Increment = SliderConfig.Increment or 1
				SliderConfig.Default = SliderConfig.Default or 50
				SliderConfig.Callback = SliderConfig.Callback or function() end
				SliderConfig.Flag = SliderConfig.Flag or SliderConfig.Name
				SliderConfig.Save = SliderConfig.Save or false

				local SliderValue = SliderConfig.Default
				local SliderDragging = false

				local SliderFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 50),
					BackgroundTransparency = 0.7,
					Parent = ItemParent
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					AddThemeObject(SetProps(MakeElement("Label", SliderConfig.Name, 14), {
						Size = UDim2.new(1, -20, 0, 15),
						Position = UDim2.new(0, 10, 0, 0),
						Font = Enum.Font.GothamSemibold
					}), "Text"),
					AddThemeObject(SetProps(MakeElement("Label", tostring(SliderValue), 12), {
						Size = UDim2.new(1, -20, 0, 15),
						Position = UDim2.new(0, 10, 1, -15),
						TextXAlignment = Enum.TextXAlignment.Right,
						Font = Enum.Font.GothamSemibold
					}), "TextDark"),
					SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(1, -20, 0, 10),
						Position = UDim2.new(0, 10, 0.5, 0),
						AnchorPoint = Vector2.new(0, 0.5),
						BackgroundTransparency = 0.8
					}), {
						AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
						SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
							Size = UDim2.new((SliderValue - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min), 0, 1, 0),
							BackgroundTransparency = 0
						}), {
							AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke")
						})
					})
				})

				local SliderBtn = SetProps(MakeElement("Button"), {
					Size = UDim2.new(1, -20, 0, 10),
					Position = UDim2.new(0, 10, 0.5, 0),
					AnchorPoint = Vector2.new(0, 0.5),
					Parent = SliderFrame
				})

				local function UpdateSlider(Input)
					local Position = UDim2.new(math.clamp((Input.Position.X - SliderFrame.AbsolutePosition.X) / SliderFrame.AbsoluteSize.X, 0, 1), 0, 1, 0)
					local Value = math.floor((((Position.X.Scale * SliderConfig.Max) / SliderConfig.Increment) * SliderConfig.Increment) + 0.5)
					Value = math.clamp(Value, SliderConfig.Min, SliderConfig.Max)
					SliderValue = Value
					SliderFrame.Frame.Frame.Size = UDim2.new((SliderValue - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min), 0, 1, 0)
					SliderFrame.Label2.Text = tostring(SliderValue)
					SliderConfig.Callback(SliderValue)
				end

				AddConnection(SliderBtn.InputBegan, function(Input)
					if CheckKey(WhitelistedMouse, Input.UserInputType) then
						SliderDragging = true
						UpdateSlider(Input)
					end
				end)

				AddConnection(SliderBtn.InputEnded, function(Input)
					if CheckKey(WhitelistedMouse, Input.UserInputType) then
						SliderDragging = false
					end
				end)

				AddConnection(UserInputService.InputChanged, function(Input)
					if SliderDragging and Input.UserInputType == Enum.UserInputType.MouseMovement then
						UpdateSlider(Input)
					end
				end)

				OrionLib.Flags[SliderConfig.Flag] = {
					Type = "Slider",
					Save = SliderConfig.Save,
					Value = SliderValue,
					Set = function(Value)
						SliderValue = Value
						SliderFrame.Frame.Frame.Size = UDim2.new((SliderValue - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min), 0, 1, 0)
						SliderFrame.Label2.Text = tostring(SliderValue)
						SliderConfig.Callback(SliderValue)
					end
				}

				return SliderFrame
			end

			function ElementFunction:AddTextbox(TextboxConfig)
				TextboxConfig = TextboxConfig or {}
				TextboxConfig.Name = TextboxConfig.Name or "Textbox"
				TextboxConfig.Placeholder = TextboxConfig.Placeholder or "Enter text..."
				TextboxConfig.Default = TextboxConfig.Default or ""
				TextboxConfig.Callback = TextboxConfig.Callback or function() end
				TextboxConfig.Flag = TextboxConfig.Flag or TextboxConfig.Name
				TextboxConfig.Save = TextboxConfig.Save or false

				local TextboxValue = TextboxConfig.Default
				local TextboxFocused = false

				local TextboxFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					AddThemeObject(SetProps(MakeElement("Label", TextboxConfig.Name, 14), {
						Size = UDim2.new(1, -20, 1, 0),
						Position = UDim2.new(0, 10, 0, 0),
						Font = Enum.Font.GothamSemibold
					}), "Text"),
					AddThemeObject(SetProps(MakeElement("TextBox", {
						Size = UDim2.new(0.5, 0, 1, 0),
						Position = UDim2.new(0.5, 0, 0, 0),
						BackgroundTransparency = 1,
						Text = TextboxValue,
						PlaceholderText = TextboxConfig.Placeholder,
						TextColor3 = Color3.fromRGB(255, 255, 255),
						PlaceholderColor3 = Color3.fromRGB(200, 200, 200),
						TextSize = 14,
						Font = Enum.Font.GothamSemibold,
						TextXAlignment = Enum.TextXAlignment.Right
					}), {
						Name = "Box"
					}), "Text")
				})

				AddConnection(TextboxFrame.Box.Focused, function()
					TextboxFocused = true
				end)

				AddConnection(TextboxFrame.Box.FocusLost, function()
					TextboxFocused = false
					TextboxValue = TextboxFrame.Box.Text
					TextboxConfig.Callback(TextboxValue)
				end)

				OrionLib.Flags[TextboxConfig.Flag] = {
					Type = "Textbox",
					Save = TextboxConfig.Save,
					Value = TextboxValue,
					Set = function(Value)
						TextboxValue = Value
						TextboxFrame.Box.Text = Value
						TextboxConfig.Callback(Value)
					end
				}

				return TextboxFrame
			end

			function ElementFunction:AddKeybind(KeybindConfig)
				KeybindConfig = KeybindConfig or {}
				KeybindConfig.Name = KeybindConfig.Name or "Keybind"
				KeybindConfig.Default = KeybindConfig.Default or Enum.KeyCode.RightShift
				KeybindConfig.Callback = KeybindConfig.Callback or function() end
				KeybindConfig.Flag = KeybindConfig.Flag or KeybindConfig.Name
				KeybindConfig.Save = KeybindConfig.Save or false

				local KeybindValue = KeybindConfig.Default
				local KeybindListening = false

				local KeybindFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					AddThemeObject(SetProps(MakeElement("Label", KeybindConfig.Name, 14), {
						Size = UDim2.new(1, -20, 1, 0),
						Position = UDim2.new(0, 10, 0, 0),
						Font = Enum.Font.GothamSemibold
					}), "Text"),
					AddThemeObject(SetProps(MakeElement("Label", tostring(KeybindValue):gsub("Enum.KeyCode.", ""), 14), {
						Size = UDim2.new(0.5, 0, 1, 0),
						Position = UDim2.new(0.5, 0, 0, 0),
						TextXAlignment = Enum.TextXAlignment.Right,
						Font = Enum.Font.GothamSemibold,
						Name = "Key"
					}), "TextDark")
				})

				local KeybindBtn = SetProps(MakeElement("Button"), {
					Size = UDim2.new(0.5, 0, 1, 0),
					Position = UDim2.new(0.5, 0, 0, 0),
					Parent = KeybindFrame
				})

				AddConnection(KeybindBtn.MouseButton1Up, function()
					KeybindListening = true
					KeybindFrame.Key.Text = "..."
				end)

				AddConnection(UserInputService.InputBegan, function(Input)
					if KeybindListening then
						if not CheckKey(BlacklistedKeys, Input.KeyCode) then
							KeybindValue = Input.KeyCode
							KeybindFrame.Key.Text = tostring(KeybindValue):gsub("Enum.KeyCode.", "")
							KeybindListening = false
						end
					else
						if Input.KeyCode == KeybindValue then
							KeybindConfig.Callback()
						end
					end
				end)

				OrionLib.Flags[KeybindConfig.Flag] = {
					Type = "Keybind",
					Save = KeybindConfig.Save,
					Value = KeybindValue,
					Set = function(Value)
						KeybindValue = Value
						KeybindFrame.Key.Text = tostring(KeybindValue):gsub("Enum.KeyCode.", "")
					end
				}

				return KeybindFrame
			end

			function ElementFunction:AddDropdown(DropdownConfig)
				DropdownConfig = DropdownConfig or {}
				DropdownConfig.Name = DropdownConfig.Name or "Dropdown"
				DropdownConfig.Options = DropdownConfig.Options or {}
				DropdownConfig.Default = DropdownConfig.Default or DropdownConfig.Options[1]
				DropdownConfig.Callback = DropdownConfig.Callback or function() end
				DropdownConfig.Flag = DropdownConfig.Flag or DropdownConfig.Name
				DropdownConfig.Save = DropdownConfig.Save or false

				local DropdownValue = DropdownConfig.Default
				local DropdownOpen = false

				local DropdownFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent,
					ClipsDescendants = true
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					AddThemeObject(SetProps(MakeElement("Label", DropdownConfig.Name, 14), {
						Size = UDim2.new(1, -20, 1, 0),
						Position = UDim2.new(0, 10, 0, 0),
						Font = Enum.Font.GothamSemibold
					}), "Text"),
					AddThemeObject(SetProps(MakeElement("Label", DropdownValue, 14), {
						Size = UDim2.new(0.5, 0, 1, 0),
						Position = UDim2.new(0.5, 0, 0, 0),
						TextXAlignment = Enum.TextXAlignment.Right,
						Font = Enum.Font.GothamSemibold,
						Name = "Value"
					}), "TextDark"),
					SetProps(MakeElement("Image", "rbxassetid://7072718162"), {
						Size = UDim2.new(0, 18, 0, 18),
						Position = UDim2.new(1, -25, 0.5, 0),
						AnchorPoint = Vector2.new(1, 0.5),
						ImageTransparency = 0.4,
						Name = "Arrow"
					})
				})

				local DropdownBtn = SetProps(MakeElement("Button"), {
					Size = UDim2.new(1, 0, 1, 0),
					Parent = DropdownFrame
				})

				local DropdownOptions = SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 0),
					Position = UDim2.new(0, 0, 1, 5),
					BackgroundTransparency = 0.7,
					Visible = false
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					MakeElement("List", 0, 5),
					MakeElement("Padding", 5, 5, 5, 5)
				})
				DropdownOptions.Parent = DropdownFrame

				AddConnection(DropdownOptions.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
					DropdownOptions.Size = UDim2.new(1, 0, 0, DropdownOptions.UIListLayout.AbsoluteContentSize.Y + 10)
				end)

				local function ToggleDropdown()
					DropdownOpen = not DropdownOpen
					if DropdownOpen then
						DropdownOptions.Visible = true
						TweenService:Create(DropdownFrame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 30 + DropdownOptions.Size.Y.Offset + 5)}):Play()
						TweenService:Create(DropdownFrame.Arrow, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Rotation = 180}):Play()
					else
						TweenService:Create(DropdownFrame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 30)}):Play()
						TweenService:Create(DropdownFrame.Arrow, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Rotation = 0}):Play()
						wait(0.15)
						DropdownOptions.Visible = false
					end
				end

				AddConnection(DropdownBtn.MouseButton1Up, ToggleDropdown)

				local function AddOption(Option)
					local OptionBtn = SetChildren(SetProps(MakeElement("Button"), {
						Size = UDim2.new(1, 0, 0, 20),
						BackgroundTransparency = 1
					}), {
						AddThemeObject(SetProps(MakeElement("Label", Option, 14), {
							Size = UDim2.new(1, 0, 1, 0),
							Font = Enum.Font.GothamSemibold
						}), "TextDark")
					})
					OptionBtn.Parent = DropdownOptions

					AddConnection(OptionBtn.MouseButton1Up, function()
						DropdownValue = Option
						DropdownFrame.Value.Text = DropdownValue
						ToggleDropdown()
						DropdownConfig.Callback(DropdownValue)
					end)
				end

				for _, Option in next, DropdownConfig.Options do
					AddOption(Option)
				end

				DropdownFrame.Value.Text = DropdownValue

				OrionLib.Flags[DropdownConfig.Flag] = {
					Type = "Dropdown",
					Save = DropdownConfig.Save,
					Value = DropdownValue,
					Set = function(Value)
						DropdownValue = Value
						DropdownFrame.Value.Text = DropdownValue
						DropdownConfig.Callback(DropdownValue)
					end
				}

				return DropdownFrame
			end

			function ElementFunction:AddColorpicker(ColorpickerConfig)
				ColorpickerConfig = ColorpickerConfig or {}
				ColorpickerConfig.Name = ColorpickerConfig.Name or "Colorpicker"
				ColorpickerConfig.Default = ColorpickerConfig.Default or Color3.fromRGB(255, 255, 255)
				ColorpickerConfig.Callback = ColorpickerConfig.Callback or function() end
				ColorpickerConfig.Flag = ColorpickerConfig.Flag or ColorpickerConfig.Name
				ColorpickerConfig.Save = ColorpickerConfig.Save or false

				local ColorpickerValue = ColorpickerConfig.Default
				local ColorpickerOpen = false

				local ColorpickerFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent,
					ClipsDescendants = true
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					AddThemeObject(SetProps(MakeElement("Label", ColorpickerConfig.Name, 14), {
						Size = UDim2.new(1, -20, 1, 0),
						Position = UDim2.new(0, 10, 0, 0),
						Font = Enum.Font.GothamSemibold
					}), "Text"),
					SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
						Size = UDim2.new(0, 50, 0, 15),
						Position = UDim2.new(1, -60, 0.5, 0),
						AnchorPoint = Vector2.new(1, 0.5),
						BackgroundColor3 = ColorpickerValue
					}), {
						AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke")
					})
				})

				local ColorpickerBtn = SetProps(MakeElement("Button"), {
					Size = UDim2.new(1, 0, 1, 0),
					Parent = ColorpickerFrame
				})

				local ColorpickerPicker = SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 100),
					Position = UDim2.new(0, 0, 1, 5),
					BackgroundTransparency = 0.7,
					Visible = false
				}), {
					AddThemeObject(MakeElement("Stroke", Color3.fromRGB(255, 255, 255), 1.2), "Stroke"),
					SetChildren(SetProps(MakeElement("Image", "rbxassetid://4155801252"), {
						Size = UDim2.new(1, -10, 1, -30),
						Position = UDim2.new(0, 5, 0, 5),
						BackgroundTransparency = 1
					}), {
						SetProps(MakeElement("ImageButton", "rbxassetid://6990276494"), {
							Size = UDim2.new(0, 10, 0, 10),
							AnchorPoint = Vector2.new(0.5, 0.5),
							BackgroundTransparency = 1,
							Name = "Cursor"
						})
					}),
					SetChildren(SetProps(MakeElement("Frame"), {
						Size = UDim2.new(1, -10, 0, 15),
						Position = UDim2.new(0, 5, 1, -20),
						BackgroundTransparency = 1
					}), {
						SetProps(MakeElement("UIGradient", {
							Color = ColorSequence.new{
								ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
								ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 255, 0)),
								ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),
								ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
								ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 0, 255)),
								ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 0, 255)),
								ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
							}
						}), {
							Name = "Gradient"
						}),
						SetProps(MakeElement("Frame"), {
							Size = UDim2.new(0, 2, 1, 0),
							AnchorPoint = Vector2.new(0.5, 0),
							BackgroundColor3 = Color3.fromRGB(255, 255, 255),
							Name = "Cursor"
						})
					})
				})
				ColorpickerPicker.Parent = ColorpickerFrame

				local function UpdateColorpicker()
					ColorpickerFrame.Frame.BackgroundColor3 = ColorpickerValue
					ColorpickerConfig.Callback(ColorpickerValue)
				end

				local function ToggleColorpicker()
					ColorpickerOpen = not ColorpickerOpen
					if ColorpickerOpen then
						ColorpickerPicker.Visible = true
						TweenService:Create(ColorpickerFrame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 30 + ColorpickerPicker.Size.Y.Offset + 5)}):Play()
					else
						TweenService:Create(ColorpickerFrame, TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 30)}):Play()
						wait(0.15)
						ColorpickerPicker.Visible = false
					end
				end

				AddConnection(ColorpickerBtn.MouseButton1Up, ToggleColorpicker)

				local function UpdateFromSatVal(Input)
					local Sat = (Input.Position.X - ColorpickerPicker.Image.AbsolutePosition.X) / ColorpickerPicker.Image.AbsoluteSize.X
					local Val = 1 - ((Input.Position.Y - ColorpickerPicker.Image.AbsolutePosition.Y) / ColorpickerPicker.Image.AbsoluteSize.Y)
					Sat = math.clamp(Sat, 0, 1)
					Val = math.clamp(Val, 0, 1)
					local Hue = ColorpickerPicker.Frame.Cursor.Position.X.Offset / ColorpickerPicker.Frame.AbsoluteSize.X
					ColorpickerValue = Color3.fromHSV(Hue, Sat, Val)
					UpdateColorpicker()
					ColorpickerPicker.Image.Cursor.Position = UDim2.new(Sat, 0, Val, 0)
				end

				local function UpdateFromHue(Input)
					local Hue = (Input.Position.X - ColorpickerPicker.Frame.AbsolutePosition.X) / ColorpickerPicker.Frame.AbsoluteSize.X
					Hue = math.clamp(Hue, 0, 1)
					local Sat, Val = ColorpickerPicker.Image.Cursor.Position.X.Scale, ColorpickerPicker.Image.Cursor.Position.Y.Scale
					ColorpickerValue = Color3.fromHSV(Hue, Sat, Val)
					UpdateColorpicker()
					ColorpickerPicker.Frame.Cursor.Position = UDim2.new(Hue, 0, 0, 0)
				end

				AddConnection(ColorpickerPicker.Image.InputBegan, function(Input)
					if Input.UserInputType == Enum.UserInputType.MouseButton1 then
						UpdateFromSatVal(Input)
						AddConnection(UserInputService.InputChanged, function(Input2)
							if Input2.UserInputType == Enum.UserInputType.MouseMovement then
								UpdateFromSatVal(Input2)
							end
						end)
					end
				end)

				AddConnection(ColorpickerPicker.Frame.InputBegan, function(Input)
					if Input.UserInputType == Enum.UserInputType.MouseButton1 then
						UpdateFromHue(Input)
						AddConnection(UserInputService.InputChanged, function(Input2)
							if Input2.UserInputType == Enum.UserInputType.MouseMovement then
								UpdateFromHue(Input2)
							end
						end)
					end
				end)

				UpdateColorpicker()

				OrionLib.Flags[ColorpickerConfig.Flag] = {
					Type = "Colorpicker",
					Save = ColorpickerConfig.Save,
					Value = ColorpickerValue,
					Set = function(Value)
						ColorpickerValue = Value
						UpdateColorpicker()
					end
				}

				return ColorpickerFrame
			end

			return ElementFunction
		end

		return GetElements(Container)
	end

	return TabFunction
end

return OrionLib
